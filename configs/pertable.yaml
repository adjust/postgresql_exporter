tuple_access_stats:
    query: >-
        select
            schemaname, relname, seq_scan, seq_tup_read,
            idx_scan, idx_tup_fetch, n_tup_ins, n_tup_upd, n_tup_del,
            n_tup_hot_upd, n_live_tup, n_dead_tup, n_mod_since_analyze
        from pg_stat_user_tables

    metrics:
        - schemaname:
            usage: "LABEL"
            description: "Schema of relation"
        - relname:
            usage: "LABEL"
            description: "Name of relation"
        - seq_scan:
            usage: "COUNTER"
            description: "Number of sequential scans"
        - seq_tup_read:
            usage: "COUNTER"
            description: "Tuples fetched by sequential scan"
        - idx_scan:
            usage: "COUNTER"
            description: "Number of index scans"
        - idx_tup_fetch:
            usage: "COUNTER"
            description: "Number of tuples fetched by index scan"
        - n_tup_ins:
            usage: "COUNTER"
            description: "Number of tuples inserted"
        - n_tup_upd:
            usage: "COUNTER"
            description: "Number of tuples updated"
        - n_tup_del:
            usage: "COUNTER"
            description: "Number of tuples deleted"
        - n_tup_hot_upd:
            usage: "COUNTER"
            description: "Number of tuples HOT updated (i.e. no index update)"
        - n_live_tup:
            usage: "GAUGE"
            description: "Estimated live tuples"
        - n_dead_tup:
            usage: "GAUGE"
            description: "Estimated dead tuples"
        - n_mod_since_analyze:
            usage: "GAUGE"
            description: "Estimated modified tuples since analyze"

autovacuum_stats:
    query: >-
        select
            schemaname,
            relname,
            extract (epoch from age(now(), last_vacuum)) as age_last_vacuum,
            vacuum_count,
            extract (epoch from age(now(), last_autovacuum)) as age_last_autovacuum,
            autovacuum_count,
            extract (epoch from age(now(), last_analyze)) as age_last_analyze,
            analyze_count,
            extract (epoch from age(now(), last_autoanalyze)) as age_last_autoanalyze,
            autoanalyze_count
        from pg_stat_user_tables
    metrics:
       - schemaname:
          usage: "LABEL"
          description: "Schema of relation"
       - relname:
          usage: "LABEL"
          description: "Name of relation"
       - age_last_vacuum:
          usage: "GAUGE"
          description: "Seconds since last vacuum"
       - vacuum_count:
          usage: "COUNTER"
          description: "Number of vacuums of table"
       - age_last_autovacuum:
          usage: "GAUGE"
          description: "Seconds since last autovacuum"
       - autovacuum_count:
          usage: "COUNTER"
          description: "Number of autovacuums of table"
       - age_last_analyze:
          usage: "GAUGE"
          description: "Seconds since last analyze"
       - analyze_count:
          usage: "COUNTER"
          description: "Number of analyze runs of table"
       - age_last_autoanalyze:
          usage: "GAUGE"
          description: "Seconds since last autoanalyze"
       - autoanalyze_count:
          usage: "COUNTER"
          description: "Number of autoanalyze runs of table"

relation_total_size:
    query: >-
        select
            n.nspname as schemaname,
            c.relname,
            pg_total_relation_size(c.oid) as inclusive_bytes,
            pg_relation_size(c.oid) as exclusive_bytes
        from pg_class c
        join pg_namespace n on c.relnamespace = n.oid
        where relkind = 'r'
        and n.nspname not in ('pg_toast', 'pg_catalog', 'information_schema')
    metrics:
        - schemaname:
            usage: "LABEL"
            description: "Schema of relation"
        - relname:
            usage: "LABEL"
            description: "Name of relation"
        - inclusive_bytes:
            usage: "GAUGE"
            description: "Size of table, including indexes and toast"
        - exclusive_bytes:
            usage: "GAUGE"
            description: "Size of table, excluding indexes and toast"

toast_total_size:
    query: >-
        select
            n.nspname as schemaname,
            c.relname,
            pg_relation_size(t.oid) as exclusive_bytes
        from pg_class c
        join pg_class t on t.relname = 'pg_toast_' || c.oid::text
        join pg_namespace n on c.relnamespace = n.oid;
    metrics:
        - schemaname:
            usage: "LABEL"
            description: "Schema of relation"
        - relname:
            usage: "LABEL"
            description: "Name of relation"
        - exclusive_bytes:
            usage: "GAUGE"
            description: "Size of table, excluding indexes and toast"

frozen_age:
    query: >-
        select
            n.nspname as schemaname,
            c.relname,
            greatest(age(c.relfrozenxid), age(t.relfrozenxid)) as frozenxid
        from pg_class c
        left join pg_class t on c.reltoastrelid = t.oid
        join pg_namespace n on c.relnamespace = n.oid
    metrics:
        - schemaname:
            usage: "LABEL"
            description: "Schema of relation"
        - relname:
            usage: "LABEL"
            description: "Name of relation"
        - frozenxid:
            usage: "GAUGE"
            description: "Frozen XID age"